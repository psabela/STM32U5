/*
 * rcc_assembly.s
 *
 *  Created on: Feb 25, 2025
 *      Author: peter
 */

.syntax unified
.cpu cortex-m33
.fpu softvfp
.thumb

.text

.global RCC_AHB2ENR1_ADC12EN_Set
.global RCC_AHB3ENR_PWREN_Set
.global	RCC_AHB3ENR_PWREN_Clear
.global RCC_APB2ENR_TIM8EN_Set
.global RCC_AHB2ENR1_GPIOHEN_Set
.global RCC_AHB2ENR1_GPIOAEN_Set
.global RCC_APB1ENR1_TIM2EN_Set
.global RCC_DMA1_Set_Clock


.equ RCC_BASE_ADDR, 		0x46020C00U
.equ RCC_AHB2ENR1_OFFSET, 	0x8CU		//GPIO, ADC12 clock
.equ RCC_APB1ENR1_OFFSET,	0x09CU		//TIM3 clock
.equ RCC_APB2ENR_OFFSET,    0x0A4
.equ RCC_AHB3ENR_OFFSET,	0x94U		//ADC4

.equ RCC_AHB1ENR,			0x46020c88U

RCC_DMA1_Set_Clock:
	LDR 	R1, =RCC_AHB1ENR
	LDR 	R0, [R1]
	MOVS	R2, 0x1
	ORRS	R0, R2
	STR		R0, [R1]
	BX LR

RCC_AHB2ENR1_ADC12EN_Set:
	LDR		R1, =RCC_BASE_ADDR
	LDR		R2, =RCC_AHB2ENR1_OFFSET
	ADDS	R1, R2
	LDR		R0, [R1]
	MOVS	R2, 0x1
	LSLS	R2, 10
	ORRS	R0, R2
	STR		R0, [R1]
	BX LR

RCC_AHB3ENR_PWREN_Set:
	LDR		R1, =RCC_BASE_ADDR
	LDR		R2, =RCC_AHB3ENR_OFFSET
	ADDS	R1, R2
	LDR		R0, [R1]
	MOVS	R2, 0x1
	LSLS	R2, #2
	ORRS	R0, R2
	STR		R0, [R1]
	BX LR

RCC_AHB3ENR_PWREN_Clear:
	LDR		R1, =RCC_BASE_ADDR
	LDR		R2, =RCC_AHB3ENR_OFFSET
	ADDS	R1, R2
	LDR		R0, [R1]
	MOVS	R2, 0x1
	LSLS	R2, #2
	MVNS	R2, R2
	ANDS	R0, R2
	STR		R0, [R1]
	BX LR

RCC_AHB2ENR1_GPIOAEN_Set:
	//enable clock on GPIOA
	LDR		R1, =RCC_BASE_ADDR
	LDR		R2, =RCC_AHB2ENR1_OFFSET
	ADDS	R1, R2
	LDR		R0, [R1]
	MOVS	R2, 0x1
	LSLS	R2, #0 //set GPIOA bit 0 clock enable
	ORRS	R0, R2
	STR		R0, [R1]
	BX LR

RCC_AHB2ENR1_GPIOHEN_Set:
	//enable clock on GPIOH
	LDR		R1, =RCC_BASE_ADDR
	LDR		R2, =RCC_AHB2ENR1_OFFSET
	ADDS	R1, R2
	LDR		R0, [R1]
	MOVS	R2, 0x1
	LSLS	R2, #7 //set GPIOH bit 7 clock enable
	ORRS	R0, R2
	STR		R0, [R1]
	BX LR

RCC_APB2ENR_TIM8EN_Set:
	LDR		R1, =RCC_BASE_ADDR
	LDR		R2, =RCC_APB2ENR_OFFSET
	ADDS	R1, R2
	LDR		R0, [R1]
	MOVS	R2, 0x01
	LSLS	R2, #13
	ORRS	R0, R2
	STR		R0, [R1]
	BX LR

RCC_APB1ENR1_TIM2EN_Set:
	LDR		R1, =RCC_BASE_ADDR
	LDR		R2, =RCC_APB1ENR1_OFFSET
	ADDS	R1, R2
	LDR		R0, [R1]
	MOVS	R2, 0x01
	LSLS	R2, #0
	ORRS	R0, R2
	STR		R0, [R1]
	BX LR
